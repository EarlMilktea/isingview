/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */const II=Symbol("Comlink.proxy"),yQ=Symbol("Comlink.endpoint"),hQ=Symbol("Comlink.releaseProxy"),ig=Symbol("Comlink.finalizer"),WA=Symbol("Comlink.thrown"),BI=e=>typeof e=="object"&&e!==null||typeof e=="function",GQ={canHandle:e=>BI(e)&&e[II],serialize(e){const{port1:a,port2:F}=new MessageChannel;return og(e,a),[F,[F]]},deserialize(e){return e.start(),kQ(e)}},lQ={canHandle:e=>BI(e)&&WA in e,serialize({value:e}){let a;return e instanceof Error?a={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:a={isError:!1,value:e},[a,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},QI=new Map([["proxy",GQ],["throw",lQ]]);function MQ(e,a){for(const F of e)if(a===F||F==="*"||F instanceof RegExp&&F.test(a))return!0;return!1}function og(e,a=globalThis,F=["*"]){a.addEventListener("message",function C(R){if(!R||!R.data)return;if(!MQ(F,R.origin)){console.warn(`Invalid origin '${R.origin}' for comlink proxy`);return}const{id:l,type:y,path:k}=Object.assign({path:[]},R.data),M=(R.data.argumentList||[]).map(IA);let G;try{const N=k.slice(0,-1).reduce((U,S)=>U[S],e),d=k.reduce((U,S)=>U[S],e);switch(y){case"GET":G=d;break;case"SET":N[k.slice(-1)[0]]=IA(R.data.value),G=!0;break;case"APPLY":G=d.apply(N,M);break;case"CONSTRUCT":{const U=new d(...M);G=YQ(U)}break;case"ENDPOINT":{const{port1:U,port2:S}=new MessageChannel;og(e,S),G=dQ(U,[U])}break;case"RELEASE":G=void 0;break;default:return}}catch(N){G={value:N,[WA]:0}}Promise.resolve(G).catch(N=>({value:N,[WA]:0})).then(N=>{const[d,U]=qA(N);a.postMessage(Object.assign(Object.assign({},d),{id:l}),U),y==="RELEASE"&&(a.removeEventListener("message",C),CI(a),ig in e&&typeof e[ig]=="function"&&e[ig]())}).catch(N=>{const[d,U]=qA({value:new TypeError("Unserializable return value"),[WA]:0});a.postMessage(Object.assign(Object.assign({},d),{id:l}),U)})}),a.start&&a.start()}function NQ(e){return e.constructor.name==="MessagePort"}function CI(e){NQ(e)&&e.close()}function kQ(e,a){return eg(e,[],a)}function vA(e){if(e)throw new Error("Proxy has been released and is not useable")}function EI(e){return rA(e,{type:"RELEASE"}).then(()=>{CI(e)})}const ZA=new WeakMap,xA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{const a=(ZA.get(e)||0)-1;ZA.set(e,a),a===0&&EI(e)});function UQ(e,a){const F=(ZA.get(a)||0)+1;ZA.set(a,F),xA&&xA.register(e,a,e)}function SQ(e){xA&&xA.unregister(e)}function eg(e,a=[],F=function(){}){let C=!1;const R=new Proxy(F,{get(l,y){if(vA(C),y===hQ)return()=>{SQ(R),EI(e),C=!0};if(y==="then"){if(a.length===0)return{then:()=>R};const k=rA(e,{type:"GET",path:a.map(M=>M.toString())}).then(IA);return k.then.bind(k)}return eg(e,[...a,y])},set(l,y,k){vA(C);const[M,G]=qA(k);return rA(e,{type:"SET",path:[...a,y].map(N=>N.toString()),value:M},G).then(IA)},apply(l,y,k){vA(C);const M=a[a.length-1];if(M===yQ)return rA(e,{type:"ENDPOINT"}).then(IA);if(M==="bind")return eg(e,a.slice(0,-1));const[G,N]=gI(k);return rA(e,{type:"APPLY",path:a.map(d=>d.toString()),argumentList:G},N).then(IA)},construct(l,y){vA(C);const[k,M]=gI(y);return rA(e,{type:"CONSTRUCT",path:a.map(G=>G.toString()),argumentList:k},M).then(IA)}});return UQ(R,e),R}function JQ(e){return Array.prototype.concat.apply([],e)}function gI(e){const a=e.map(qA);return[a.map(F=>F[0]),JQ(a.map(F=>F[1]))]}const iI=new WeakMap;function dQ(e,a){return iI.set(e,a),e}function YQ(e){return Object.assign(e,{[II]:!0})}function qA(e){for(const[a,F]of QI)if(F.canHandle(e)){const[C,R]=F.serialize(e);return[{type:"HANDLER",name:a,value:C},R]}return[{type:"RAW",value:e},iI.get(e)||[]]}function IA(e){switch(e.type){case"HANDLER":return QI.get(e.name).deserialize(e.value);case"RAW":return e.value}}function rA(e,a,F){return new Promise(C=>{const R=fQ();e.addEventListener("message",function l(y){!y.data||!y.data.id||y.data.id!==R||(e.removeEventListener("message",l),C(y.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:R},a),F)})}function fQ(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}var pQ=(()=>{var e=import.meta.url;return async function(a={}){var F,C=a,R,l,y=new Promise((A,g)=>{R=A,l=g});["getExceptionMessage","incrementExceptionRefcount","decrementExceptionRefcount","_memory","___indirect_function_table","onRuntimeInitialized"].forEach(A=>{Object.getOwnPropertyDescriptor(y,A)||Object.defineProperty(y,A,{get:()=>Y("You are getting "+A+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),set:()=>Y("You are setting "+A+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")})});var k=typeof window=="object",M=typeof importScripts=="function",G=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",N=!k&&!G&&!M;if(C.ENVIRONMENT)throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");if(G){const{createRequire:A}=await Promise.resolve().then(function(){return TQ});var d=A(import.meta.url)}var U=Object.assign({},C),S="",VA,MA;if(G){if(typeof process>"u"||!process.release||process.release.name!=="node")throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");var tg=process.versions.node,aA=tg.split(".").slice(0,3);if(aA=aA[0]*1e4+aA[1]*100+aA[2].split("-")[0]*1,aA<16e4)throw new Error("This emscripten-generated code requires node v16.0.0 (detected v"+tg+")");var eI=d("fs"),oI=d("path");S=d("url").fileURLToPath(new URL("./",import.meta.url)),VA=(A,g)=>(A=Fg(A)?new URL(A):oI.normalize(A),eI.readFileSync(A,g?void 0:"utf8")),MA=A=>{var g=VA(A,!0);return g.buffer||(g=new Uint8Array(g)),s(g.buffer),g},!C.thisProgram&&process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",A=>{if(A!=="unwind"&&!(A instanceof lg)&&!(A.context instanceof lg))throw A})}else if(N){if(typeof process=="object"&&typeof d=="function"||typeof window=="object"||typeof importScripts=="function")throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)")}else if(k||M){if(M?S=self.location.href:typeof document<"u"&&document.currentScript&&(S=document.currentScript.src),e&&(S=e),S.startsWith("blob:")?S="":S=S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1),!(typeof window=="object"||typeof importScripts=="function"))throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");VA=A=>{var g=new XMLHttpRequest;return g.open("GET",A,!1),g.send(null),g.responseText},M&&(MA=A=>{var g=new XMLHttpRequest;return g.open("GET",A,!1),g.responseType="arraybuffer",g.send(null),new Uint8Array(g.response)})}else throw new Error("environment detection error");var tI=C.print||console.log.bind(console),p=C.printErr||console.error.bind(console);Object.assign(C,U),U=null,IQ(),C.arguments&&C.arguments,W("arguments","arguments_"),C.thisProgram&&C.thisProgram,W("thisProgram","thisProgram"),C.quit&&C.quit,W("quit","quit_"),s(typeof C.memoryInitializerPrefixURL>"u","Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),s(typeof C.pthreadMainPrefixURL>"u","Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),s(typeof C.cdInitializerPrefixURL>"u","Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),s(typeof C.filePackagePrefixURL>"u","Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),s(typeof C.read>"u","Module.read option was removed (modify read_ in JS)"),s(typeof C.readAsync>"u","Module.readAsync option was removed (modify readAsync in JS)"),s(typeof C.readBinary>"u","Module.readBinary option was removed (modify readBinary in JS)"),s(typeof C.setWindowTitle>"u","Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)"),s(typeof C.TOTAL_MEMORY>"u","Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),W("asm","wasmExports"),W("read","read_"),W("readAsync","readAsync"),W("readBinary","readBinary"),W("setWindowTitle","setWindowTitle"),s(!N,"shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.");var NA;C.wasmBinary&&(NA=C.wasmBinary),W("wasmBinary","wasmBinary"),typeof WebAssembly!="object"&&p("no native wasm support detected");function rI(A){if(typeof G<"u"&&G){var g=Buffer.from(A,"base64");return new Uint8Array(g.buffer,g.byteOffset,g.length)}for(var I=atob(A),B=new Uint8Array(I.length),Q=0;Q<I.length;++Q)B[Q]=I.charCodeAt(Q);return B}function aI(A){if(GI(A))return rI(A.slice(cg.length))}var nA,kA=!1;function s(A,g){A||Y("Assertion failed"+(g?": "+g:""))}var P,J,sA,UA,DA,c,rg,ag;function ng(){var A=nA.buffer;C.HEAP8=P=new Int8Array(A),C.HEAP16=sA=new Int16Array(A),C.HEAPU8=J=new Uint8Array(A),C.HEAPU16=UA=new Uint16Array(A),C.HEAP32=DA=new Int32Array(A),C.HEAPU32=c=new Uint32Array(A),C.HEAPF32=rg=new Float32Array(A),C.HEAPF64=ag=new Float64Array(A)}s(!C.STACK_SIZE,"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time"),s(typeof Int32Array<"u"&&typeof Float64Array<"u"&&Int32Array.prototype.subarray!=null&&Int32Array.prototype.set!=null,"JS engine does not provide full typed array support"),s(!C.wasmMemory,"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally"),s(!C.INITIAL_MEMORY,"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically");function nI(){var A=Qg();s((A&3)==0),A==0&&(A+=4),c[A>>2]=34821223,c[A+4>>2]=2310721022,c[0]=1668509029}function jA(){if(!kA){var A=Qg();A==0&&(A+=4);var g=c[A>>2],I=c[A+4>>2];(g!=34821223||I!=2310721022)&&Y(`Stack overflow! Stack cookie has been overwritten at ${QA(A)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${QA(I)} ${QA(g)}`),c[0]!=1668509029&&Y("Runtime error: The application has corrupted its heap memory area (address zero)!")}}(function(){var A=new Int16Array(1),g=new Int8Array(A.buffer);if(A[0]=25459,g[0]!==115||g[1]!==99)throw"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)"})();var sg=[],Dg=[],wg=[],PA=!1;function sI(){if(C.preRun)for(typeof C.preRun=="function"&&(C.preRun=[C.preRun]);C.preRun.length;)cI(C.preRun.shift());OA(sg)}function DI(){s(!PA),PA=!0,jA(),OA(Dg)}function wI(){if(jA(),C.postRun)for(typeof C.postRun=="function"&&(C.postRun=[C.postRun]);C.postRun.length;)RI(C.postRun.shift());OA(wg)}function cI(A){sg.unshift(A)}function FI(A){Dg.unshift(A)}function RI(A){wg.unshift(A)}s(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),s(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),s(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),s(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var O=0,_=null,wA=null,cA={};function yI(A){O++,C.monitorRunDependencies?.(O),s(!cA[A]),cA[A]=1,_===null&&typeof setInterval<"u"&&(_=setInterval(()=>{if(kA){clearInterval(_),_=null;return}var g=!1;for(var I in cA)g||(g=!0,p("still waiting on run dependencies:")),p(`dependency: ${I}`);g&&p("(end of list)")},1e4))}function hI(A){if(O--,C.monitorRunDependencies?.(O),s(cA[A]),delete cA[A],O==0&&(_!==null&&(clearInterval(_),_=null),wA)){var g=wA;wA=null,g()}}function Y(A){C.onAbort?.(A),A="Aborted("+A+")",p(A),kA=!0;var g=new WebAssembly.RuntimeError(A);throw l(g),g}var K={error(){Y("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM")},init(){K.error()},createDataFile(){K.error()},createPreloadedFile(){K.error()},createLazyFile(){K.error()},open(){K.error()},mkdev(){K.error()},registerDevice(){K.error()},analyzePath(){K.error()},ErrnoError(){K.error()}};C.FS_createDataFile=K.createDataFile,C.FS_createPreloadedFile=K.createPreloadedFile;var cg="data:application/octet-stream;base64,",GI=A=>A.startsWith(cg),Fg=A=>A.startsWith("file://");function m(A,g){return(...I)=>{s(PA,`native function \`${A}\` called before runtime initialization`);var B=b[A];return s(B,`exported native function \`${A}\` not found`),s(I.length<=g,`native function \`${A}\` called with ${I.length} args but expects ${g}`),B(...I)}}class x extends Error{}class Rg extends x{constructor(g){super(g),this.excPtr=g;const I=Wg(g);this.name=I[0],this.message=I[1]}}function lI(){var A="data:application/octet-stream;base64,";return A}var BA;function MI(A){if(A==BA&&NA)return new Uint8Array(NA);var g=aI(A);if(g)return g;if(MA)return MA(A);throw"both async and sync fetching of the wasm failed"}function NI(A){return Promise.resolve().then(()=>MI(A))}function kI(A,g,I){return NI(A).then(B=>WebAssembly.instantiate(B,g)).then(I,B=>{p(`failed to asynchronously prepare wasm: ${B}`),Fg(BA)&&p(`warning: Loading from a file URI (${BA}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`),Y(B)})}function UI(A,g,I,B){return kI(g,I,B)}function SI(){return{env:Zg,wasi_snapshot_preview1:Zg}}function JI(){var A=SI();function g(Q,i){return b=Q.exports,nA=b.memory,s(nA,"memory not found in wasm exports"),ng(),LA=b.__indirect_function_table,s(LA,"table not found in wasm exports"),FI(b.__wasm_call_ctors),hI("wasm-instantiate"),b}yI("wasm-instantiate");var I=C;function B(Q){s(C===I,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),I=null,g(Q.instance)}if(C.instantiateWasm)try{return C.instantiateWasm(A,g)}catch(Q){p(`Module.instantiateWasm callback failed with error: ${Q}`),l(Q)}return BA||(BA=lI()),UI(NA,BA,A,B).catch(l),{}}function W(A,g,I=!0){Object.getOwnPropertyDescriptor(C,A)||Object.defineProperty(C,A,{configurable:!0,get(){let B=I?" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)":"";Y(`\`Module.${A}\` has been replaced by \`${g}\``+B)}})}function dI(A){Object.getOwnPropertyDescriptor(C,A)&&Y(`\`Module.${A}\` was supplied but \`${A}\` not included in INCOMING_MODULE_JS_API`)}function yg(A){return A==="FS_createPath"||A==="FS_createDataFile"||A==="FS_createPreloadedFile"||A==="FS_unlink"||A==="addRunDependency"||A==="FS_createLazyFile"||A==="FS_createDevice"||A==="removeRunDependency"}function hg(A,g){typeof globalThis<"u"&&Object.defineProperty(globalThis,A,{configurable:!0,get(){z(`\`${A}\` is not longer defined by emscripten. ${g}`)}})}hg("buffer","Please use HEAP8.buffer or wasmMemory.buffer"),hg("asm","Please use wasmExports instead");function YI(A){typeof globalThis<"u"&&!Object.getOwnPropertyDescriptor(globalThis,A)&&Object.defineProperty(globalThis,A,{configurable:!0,get(){var g=`\`${A}\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`,I=A;I.startsWith("_")||(I="$"+A),g+=` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${I}')`,yg(A)&&(g+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),z(g)}}),Gg(A)}function Gg(A){Object.getOwnPropertyDescriptor(C,A)||Object.defineProperty(C,A,{configurable:!0,get(){var g=`'${A}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;yg(A)&&(g+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),Y(g)}})}function lg(A){this.name="ExitStatus",this.message=`Program terminated with exit(${A})`,this.status=A}var OA=A=>{for(;A.length>0;)A.shift()(C)};C.noExitRuntime;var QA=A=>(s(typeof A=="number"),A>>>=0,"0x"+A.toString(16).padStart(8,"0")),q=A=>Vg(A),V=()=>Pg(),z=A=>{z.shown||={},z.shown[A]||(z.shown[A]=1,G&&(A="warning: "+A),p(A))},Mg=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Ng=(A,g,I)=>{for(var B=g+I,Q=g;A[Q]&&!(Q>=B);)++Q;if(Q-g>16&&A.buffer&&Mg)return Mg.decode(A.subarray(g,Q));for(var i="";g<Q;){var o=A[g++];if(!(o&128)){i+=String.fromCharCode(o);continue}var E=A[g++]&63;if((o&224)==192){i+=String.fromCharCode((o&31)<<6|E);continue}var t=A[g++]&63;if((o&240)==224?o=(o&15)<<12|E<<6|t:((o&248)!=240&&z("Invalid UTF-8 leading byte "+QA(o)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),o=(o&7)<<18|E<<12|t<<6|A[g++]&63),o<65536)i+=String.fromCharCode(o);else{var r=o-65536;i+=String.fromCharCode(55296|r>>10,56320|r&1023)}}return i},CA=(A,g)=>(s(typeof A=="number",`UTF8ToString expects a number (got ${typeof A})`),A?Ng(J,A,g):""),fI=(A,g,I,B)=>{Y(`Assertion failed: ${CA(A)}, at: `+[g?CA(g):"unknown filename",I,B?CA(B):"unknown function"])},pI=A=>{var g=new _A(A);return g.get_caught()||g.set_caught(!0),g.set_rethrown(!1),Og(g.excPtr),g.get_exception_ptr()},EA=0;class _A{constructor(g){this.excPtr=g,this.ptr=g-24}set_type(g){c[this.ptr+4>>2]=g}get_type(){return c[this.ptr+4>>2]}set_destructor(g){c[this.ptr+8>>2]=g}get_destructor(){return c[this.ptr+8>>2]}set_caught(g){g=g?1:0,P[this.ptr+12]=g}get_caught(){return P[this.ptr+12]!=0}set_rethrown(g){g=g?1:0,P[this.ptr+13]=g}get_rethrown(){return P[this.ptr+13]!=0}init(g,I){this.set_adjusted_ptr(0),this.set_type(g),this.set_destructor(I)}set_adjusted_ptr(g){c[this.ptr+16>>2]=g}get_adjusted_ptr(){return c[this.ptr+16>>2]}get_exception_ptr(){var g=eQ(this.get_type());if(g)return c[this.excPtr>>2];var I=this.get_adjusted_ptr();return I!==0?I:this.excPtr}}var uI=A=>{throw EA||(EA=new Rg(A)),EA},SA=A=>QQ(A),kg=A=>{var g=EA?.excPtr;if(!g)return SA(0),0;var I=new _A(g);I.set_adjusted_ptr(g);var B=I.get_type();if(!B)return SA(0),g;for(var Q of A){if(Q===0||Q===B)break;var i=I.ptr+16;if(iQ(Q,B,i))return SA(Q),g}return SA(B),g},KI=()=>kg([]),mI=A=>kg([A]),LI=(A,g,I)=>{var B=new _A(A);throw B.init(g,I),EA=new Rg(A),EA},HI=()=>{Y("native code called abort()")},bI=(A,g,I,B,Q)=>{},TI=()=>{for(var A=new Array(256),g=0;g<256;++g)A[g]=String.fromCharCode(g);Ug=A},Ug,L=A=>{for(var g="",I=A;J[I];)g+=Ug[J[I++]];return g},iA={},$={},JA={},eA,w=A=>{throw new eA(A)},Sg,dA=A=>{throw new Sg(A)},FA=(A,g,I)=>{A.forEach(function(E){JA[E]=g});function B(E){var t=I(E);t.length!==A.length&&dA("Mismatched type converter count");for(var r=0;r<A.length;++r)Z(A[r],t[r])}var Q=new Array(g.length),i=[],o=0;g.forEach((E,t)=>{$.hasOwnProperty(E)?Q[t]=$[E]:(i.push(E),iA.hasOwnProperty(E)||(iA[E]=[]),iA[E].push(()=>{Q[t]=$[E],++o,o===i.length&&B(Q)}))}),i.length===0&&B(Q)};function vI(A,g,I={}){var B=g.name;if(A||w(`type "${B}" must have a positive integer typeid pointer`),$.hasOwnProperty(A)){if(I.ignoreDuplicateRegistrations)return;w(`Cannot register type '${B}' twice`)}if($[A]=g,delete JA[A],iA.hasOwnProperty(A)){var Q=iA[A];delete iA[A],Q.forEach(i=>i())}}function Z(A,g,I={}){if(!("argPackAdvance"in g))throw new TypeError("registerType registeredInstance requires argPackAdvance");return vI(A,g,I)}var j=8,XI=(A,g,I,B)=>{g=L(g),Z(A,{name:g,fromWireType:function(Q){return!!Q},toWireType:function(Q,i){return i?I:B},argPackAdvance:j,readValueFromPointer:function(Q){return this.fromWireType(J[Q])},destructorFunction:null})},WI=A=>({count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType}),zA=A=>{function g(I){return I.$$.ptrType.registeredClass.name}w(g(A)+" instance already deleted")},$A=!1,Jg=A=>{},ZI=A=>{A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)},dg=A=>{A.count.value-=1;var g=A.count.value===0;g&&ZI(A)},Yg=(A,g,I)=>{if(g===I)return A;if(I.baseClass===void 0)return null;var B=Yg(A,g,I.baseClass);return B===null?null:I.downcast(B)},fg={},xI=()=>Object.keys(hA).length,qI=()=>{var A=[];for(var g in hA)hA.hasOwnProperty(g)&&A.push(hA[g]);return A},RA=[],Ag=()=>{for(;RA.length;){var A=RA.pop();A.$$.deleteScheduled=!1,A.delete()}},yA,VI=A=>{yA=A,RA.length&&yA&&yA(Ag)},jI=()=>{C.getInheritedInstanceCount=xI,C.getLiveInheritedInstances=qI,C.flushPendingDeletes=Ag,C.setDelayFunction=VI},hA={},PI=(A,g)=>{for(g===void 0&&w("ptr should not be undefined");A.baseClass;)g=A.upcast(g),A=A.baseClass;return g},OI=(A,g)=>(g=PI(A,g),hA[g]),YA=(A,g)=>{(!g.ptrType||!g.ptr)&&dA("makeClassHandle requires ptr and ptrType");var I=!!g.smartPtrType,B=!!g.smartPtr;return I!==B&&dA("Both smartPtrType and smartPtr must be specified"),g.count={value:1},GA(Object.create(A,{$$:{value:g,writable:!0}}))};function pg(A){var g=this.getPointee(A);if(!g)return this.destructor(A),null;var I=OI(this.registeredClass,g);if(I!==void 0){if(I.$$.count.value===0)return I.$$.ptr=g,I.$$.smartPtr=A,I.clone();var B=I.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?YA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:g,smartPtrType:this,smartPtr:A}):YA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var i=this.registeredClass.getActualType(g),o=fg[i];if(!o)return Q.call(this);var E;this.isConst?E=o.constPointerType:E=o.pointerType;var t=Yg(g,this.registeredClass,E.registeredClass);return t===null?Q.call(this):this.isSmartPointer?YA(E.registeredClass.instancePrototype,{ptrType:E,ptr:t,smartPtrType:this,smartPtr:A}):YA(E.registeredClass.instancePrototype,{ptrType:E,ptr:t})}var GA=A=>typeof FinalizationRegistry>"u"?(GA=g=>g,A):($A=new FinalizationRegistry(g=>{console.warn(g.leakWarning.stack.replace(/^Error: /,"")),dg(g.$$)}),GA=g=>{var I=g.$$,B=!!I.smartPtr;if(B){var Q={$$:I},i=I.ptrType.registeredClass;Q.leakWarning=new Error(`Embind found a leaked C++ instance ${i.name} <${QA(I.ptr)}>.
We'll free it automatically in this case, but this functionality is not reliable across various environments.
Make sure to invoke .delete() manually once you're done with the instance instead.
Originally allocated`),"captureStackTrace"in Error&&Error.captureStackTrace(Q.leakWarning,pg),$A.register(g,Q,g)}return g},Jg=g=>$A.unregister(g),GA(A)),_I=()=>{Object.assign(fA.prototype,{isAliasOf(A){if(!(this instanceof fA)||!(A instanceof fA))return!1;var g=this.$$.ptrType.registeredClass,I=this.$$.ptr;A.$$=A.$$;for(var B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;g.baseClass;)I=g.upcast(I),g=g.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return g===B&&I===Q},clone(){if(this.$$.ptr||zA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A=GA(Object.create(Object.getPrototypeOf(this),{$$:{value:WI(this.$$)}}));return A.$$.count.value+=1,A.$$.deleteScheduled=!1,A},delete(){this.$$.ptr||zA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&w("Object already scheduled for deletion"),Jg(this),dg(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)},isDeleted(){return!this.$$.ptr},deleteLater(){return this.$$.ptr||zA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&w("Object already scheduled for deletion"),RA.push(this),RA.length===1&&yA&&yA(Ag),this.$$.deleteScheduled=!0,this}})};function fA(){}var pA=(A,g)=>Object.defineProperty(g,"name",{value:A}),ug=(A,g,I)=>{if(A[g].overloadTable===void 0){var B=A[g];A[g]=function(...Q){return A[g].overloadTable.hasOwnProperty(Q.length)||w(`Function '${I}' called with an invalid number of arguments (${Q.length}) - expects one of (${A[g].overloadTable})!`),A[g].overloadTable[Q.length].apply(this,Q)},A[g].overloadTable=[],A[g].overloadTable[B.argCount]=B}},zI=(A,g,I)=>{C.hasOwnProperty(A)?(w(`Cannot register public name '${A}' twice`),ug(C,A,A),C.hasOwnProperty(I)&&w(`Cannot register multiple overloads of a function with the same number of arguments (${I})!`),C[A].overloadTable[I]=g):C[A]=g},$I=48,AB=57,gB=A=>{if(A===void 0)return"_unknown";A=A.replace(/[^a-zA-Z0-9_]/g,"$");var g=A.charCodeAt(0);return g>=$I&&g<=AB?`_${A}`:A};function IB(A,g,I,B,Q,i,o,E){this.name=A,this.constructor=g,this.instancePrototype=I,this.rawDestructor=B,this.baseClass=Q,this.getActualType=i,this.upcast=o,this.downcast=E,this.pureVirtualFunctions=[]}var gg=(A,g,I)=>{for(;g!==I;)g.upcast||w(`Expected null or instance of ${I.name}, got an instance of ${g.name}`),A=g.upcast(A),g=g.baseClass;return A};function BB(A,g){if(g===null)return this.isReference&&w(`null is not a valid ${this.name}`),0;g.$$||w(`Cannot pass "${tA(g)}" as a ${this.name}`),g.$$.ptr||w(`Cannot pass deleted object as a pointer of type ${this.name}`);var I=g.$$.ptrType.registeredClass,B=gg(g.$$.ptr,I,this.registeredClass);return B}function QB(A,g){var I;if(g===null)return this.isReference&&w(`null is not a valid ${this.name}`),this.isSmartPointer?(I=this.rawConstructor(),A!==null&&A.push(this.rawDestructor,I),I):0;(!g||!g.$$)&&w(`Cannot pass "${tA(g)}" as a ${this.name}`),g.$$.ptr||w(`Cannot pass deleted object as a pointer of type ${this.name}`),!this.isConst&&g.$$.ptrType.isConst&&w(`Cannot convert argument of type ${g.$$.smartPtrType?g.$$.smartPtrType.name:g.$$.ptrType.name} to parameter type ${this.name}`);var B=g.$$.ptrType.registeredClass;if(I=gg(g.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(g.$$.smartPtr===void 0&&w("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:g.$$.smartPtrType===this?I=g.$$.smartPtr:w(`Cannot convert argument of type ${g.$$.smartPtrType?g.$$.smartPtrType.name:g.$$.ptrType.name} to parameter type ${this.name}`);break;case 1:I=g.$$.smartPtr;break;case 2:if(g.$$.smartPtrType===this)I=g.$$.smartPtr;else{var Q=g.clone();I=this.rawShare(I,HA.toHandle(()=>Q.delete())),A!==null&&A.push(this.rawDestructor,I)}break;default:w("Unsupporting sharing policy")}return I}function CB(A,g){if(g===null)return this.isReference&&w(`null is not a valid ${this.name}`),0;g.$$||w(`Cannot pass "${tA(g)}" as a ${this.name}`),g.$$.ptr||w(`Cannot pass deleted object as a pointer of type ${this.name}`),g.$$.ptrType.isConst&&w(`Cannot convert argument of type ${g.$$.ptrType.name} to parameter type ${this.name}`);var I=g.$$.ptrType.registeredClass,B=gg(g.$$.ptr,I,this.registeredClass);return B}function uA(A){return this.fromWireType(c[A>>2])}var EB=()=>{Object.assign(KA.prototype,{getPointee(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A},destructor(A){this.rawDestructor?.(A)},argPackAdvance:j,readValueFromPointer:uA,fromWireType:pg})};function KA(A,g,I,B,Q,i,o,E,t,r,n){this.name=A,this.registeredClass=g,this.isReference=I,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=i,this.sharingPolicy=o,this.rawGetPointee=E,this.rawConstructor=t,this.rawShare=r,this.rawDestructor=n,!Q&&g.baseClass===void 0?B?(this.toWireType=BB,this.destructorFunction=null):(this.toWireType=CB,this.destructorFunction=null):this.toWireType=QB}var iB=(A,g,I)=>{C.hasOwnProperty(A)||dA("Replacing nonexistent public symbol"),C[A].overloadTable!==void 0&&I!==void 0?C[A].overloadTable[I]=g:(C[A]=g,C[A].argCount=I)},eB=(A,g,I)=>{A=A.replace(/p/g,"i"),s("dynCall_"+A in C,`bad function pointer type - dynCall function not found for sig '${A}'`),I?.length?s(I.length===A.substring(1).replace(/j/g,"--").length):s(A.length==1);var B=C["dynCall_"+A];return B(g,...I)},mA=[],LA,T=A=>{var g=mA[A];return g||(A>=mA.length&&(mA.length=A+1),mA[A]=g=LA.get(A)),s(LA.get(A)==g,"JavaScript-side Wasm function table mirror is out of date!"),g},oB=(A,g,I=[])=>{if(A.includes("j"))return eB(A,g,I);s(T(g),`missing table entry in dynCall: ${g}`);var B=T(g)(...I);return B},tB=(A,g)=>(s(A.includes("j")||A.includes("p"),"getDynCaller should only be called with i64 sigs"),(...I)=>oB(A,g,I)),oA=(A,g)=>{A=L(A);function I(){return A.includes("j")?tB(A,g):T(g)}var B=I();return typeof B!="function"&&w(`unknown function pointer with signature ${A}: ${g}`),B},rB=(A,g)=>{var I=pA(g,function(B){this.name=g,this.message=B;var Q=new Error(B).stack;Q!==void 0&&(this.stack=this.toString()+`
`+Q.replace(/^Error(:[^\n]*)?\n/,""))});return I.prototype=Object.create(A.prototype),I.prototype.constructor=I,I.prototype.toString=function(){return this.message===void 0?this.name:`${this.name}: ${this.message}`},I},Kg,mg=A=>{var g=BQ(A),I=L(g);return v(g),I},Ig=(A,g)=>{var I=[],B={};function Q(i){if(!B[i]&&!$[i]){if(JA[i]){JA[i].forEach(Q);return}I.push(i),B[i]=!0}}throw g.forEach(Q),new Kg(`${A}: `+I.map(mg).join([", "]))},aB=(A,g,I,B,Q,i,o,E,t,r,n,D,h)=>{n=L(n),i=oA(Q,i),E&&=oA(o,E),r&&=oA(t,r),h=oA(D,h);var f=gB(n);zI(f,function(){Ig(`Cannot construct ${n} due to unbound types`,[B])}),FA([A,g,I],B?[B]:[],u=>{u=u[0];var lA,gA;B?(lA=u.registeredClass,gA=lA.instancePrototype):gA=fA.prototype;var TA=pA(n,function(...Eg){if(Object.getPrototypeOf(this)!==Cg)throw new eA("Use 'new' to construct "+n);if(X.constructor_body===void 0)throw new eA(n+" has no accessible constructor");var AI=X.constructor_body[Eg.length];if(AI===void 0)throw new eA(`Tried to invoke ctor of ${n} with invalid number of parameters (${Eg.length}) - expected (${Object.keys(X.constructor_body).toString()}) parameters instead!`);return AI.apply(this,Eg)}),Cg=Object.create(gA,{constructor:{value:TA}});TA.prototype=Cg;var X=new IB(n,TA,Cg,h,lA,i,E,r);X.baseClass&&(X.baseClass.__derivedClasses??=[],X.baseClass.__derivedClasses.push(X));var RQ=new KA(n,X,!0,!1,!1),zg=new KA(n+"*",X,!1,!1,!1),$g=new KA(n+" const*",X,!1,!0,!1);return fg[A]={pointerType:zg,constPointerType:$g},iB(f,TA),[RQ,zg,$g]})},Lg=(A,g)=>{for(var I=[],B=0;B<A;B++)I.push(c[g+B*4>>2]);return I},nB=A=>{for(;A.length;){var g=A.pop(),I=A.pop();I(g)}};function Hg(A){for(var g=1;g<A.length;++g)if(A[g]!==null&&A[g].destructorFunction===void 0)return!0;return!1}function sB(A,g){if(!(A instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof A} which is not a function`);var I=pA(A.name||"unknownFunctionName",function(){});I.prototype=A.prototype;var B=new I,Q=A.apply(B,g);return Q instanceof Object?Q:B}function DB(A,g,I,B){for(var Q=Hg(A),i=A.length,o="",E="",t=0;t<i-2;++t)o+=(t!==0?", ":"")+"arg"+t,E+=(t!==0?", ":"")+"arg"+t+"Wired";var r=`
        return function (${o}) {
        if (arguments.length !== ${i-2}) {
          throwBindingError('function ' + humanName + ' called with ' + arguments.length + ' arguments, expected ${i-2}');
        }`;Q&&(r+=`var destructors = [];
`);var n=Q?"destructors":"null",D=["humanName","throwBindingError","invoker","fn","runDestructors","retType","classParam"];g&&(r+="var thisWired = classParam['toWireType']("+n+`, this);
`);for(var t=0;t<i-2;++t)r+="var arg"+t+"Wired = argType"+t+"['toWireType']("+n+", arg"+t+`);
`,D.push("argType"+t);if(g&&(E="thisWired"+(E.length>0?", ":"")+E),r+=(I||B?"var rv = ":"")+"invoker(fn"+(E.length>0?", ":"")+E+`);
`,Q)r+=`runDestructors(destructors);
`;else for(var t=g?1:2;t<A.length;++t){var h=t===1?"thisWired":"arg"+(t-2)+"Wired";A[t].destructorFunction!==null&&(r+=`${h}_dtor(${h});
`,D.push(`${h}_dtor`))}return I&&(r+=`var ret = retType['fromWireType'](rv);
return ret;
`),r+=`}
`,r=`if (arguments.length !== ${D.length}){ throw new Error(humanName + "Expected ${D.length} closure arguments " + arguments.length + " given."); }
${r}`,[D,r]}function bg(A,g,I,B,Q,i){var o=g.length;o<2&&w("argTypes array size mismatch! Must at least get return value and 'this' types!"),s(!i,"Async bindings are only supported with JSPI.");for(var E=g[1]!==null&&I!==null,t=Hg(g),r=g[0].name!=="void",n=[A,w,B,Q,nB,g[0],g[1]],D=0;D<o-2;++D)n.push(g[D+2]);if(!t)for(var D=E?1:2;D<g.length;++D)g[D].destructorFunction!==null&&n.push(g[D].destructorFunction);let[h,f]=DB(g,E,r,i);h.push(f);var u=sB(Function,h)(...n);return pA(A,u)}var wB=(A,g,I,B,Q,i)=>{s(g>0);var o=Lg(g,I);Q=oA(B,Q),FA([],[A],E=>{E=E[0];var t=`constructor ${E.name}`;if(E.registeredClass.constructor_body===void 0&&(E.registeredClass.constructor_body=[]),E.registeredClass.constructor_body[g-1]!==void 0)throw new eA(`Cannot register multiple constructors with identical number of parameters (${g-1}) for class '${E.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return E.registeredClass.constructor_body[g-1]=()=>{Ig(`Cannot construct ${E.name} due to unbound types`,o)},FA([],o,r=>(r.splice(1,0,null),E.registeredClass.constructor_body[g-1]=bg(t,r,null,Q,i),[])),[]})},cB=A=>{A=A.trim();const g=A.indexOf("(");return g!==-1?(s(A[A.length-1]==")","Parentheses for argument names should match."),A.substr(0,g)):A},FB=(A,g,I,B,Q,i,o,E,t)=>{var r=Lg(I,B);g=L(g),g=cB(g),i=oA(Q,i),FA([],[A],n=>{n=n[0];var D=`${n.name}.${g}`;g.startsWith("@@")&&(g=Symbol[g.substring(2)]),E&&n.registeredClass.pureVirtualFunctions.push(g);function h(){Ig(`Cannot call ${D} due to unbound types`,r)}var f=n.registeredClass.instancePrototype,u=f[g];return u===void 0||u.overloadTable===void 0&&u.className!==n.name&&u.argCount===I-2?(h.argCount=I-2,h.className=n.name,f[g]=h):(ug(f,g,D),f[g].overloadTable[I-2]=h),FA([],r,lA=>{var gA=bg(D,lA,n,i,o,t);return f[g].overloadTable===void 0?(gA.argCount=I-2,f[g]=gA):f[g].overloadTable[I-2]=gA,[]}),[]})},Bg=[],H=[],RB=A=>{A>9&&--H[A+1]===0&&(s(H[A]!==void 0,"Decref for unallocated handle."),H[A]=void 0,Bg.push(A))},yB=()=>H.length/2-5-Bg.length,hB=()=>{H.push(0,1,void 0,1,null,1,!0,1,!1,1),s(H.length===5*2),C.count_emval_handles=yB},HA={toValue:A=>(A||w("Cannot use deleted val. handle = "+A),s(A===2||H[A]!==void 0&&A%2===0,`invalid handle: ${A}`),H[A]),toHandle:A=>{switch(A){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:{const g=Bg.pop()||H.length;return H[g]=A,H[g+1]=1,g}}}},GB={name:"emscripten::val",fromWireType:A=>{var g=HA.toValue(A);return RB(A),g},toWireType:(A,g)=>HA.toHandle(g),argPackAdvance:j,readValueFromPointer:uA,destructorFunction:null},Tg=A=>Z(A,GB),tA=A=>{if(A===null)return"null";var g=typeof A;return g==="object"||g==="array"||g==="function"?A.toString():""+A},lB=(A,g)=>{switch(g){case 4:return function(I){return this.fromWireType(rg[I>>2])};case 8:return function(I){return this.fromWireType(ag[I>>3])};default:throw new TypeError(`invalid float width (${g}): ${A}`)}},MB=(A,g,I)=>{g=L(g),Z(A,{name:g,fromWireType:B=>B,toWireType:(B,Q)=>{if(typeof Q!="number"&&typeof Q!="boolean")throw new TypeError(`Cannot convert ${tA(Q)} to ${this.name}`);return Q},argPackAdvance:j,readValueFromPointer:lB(g,I),destructorFunction:null})},NB=(A,g,I)=>{switch(g){case 1:return I?B=>P[B]:B=>J[B];case 2:return I?B=>sA[B>>1]:B=>UA[B>>1];case 4:return I?B=>DA[B>>2]:B=>c[B>>2];default:throw new TypeError(`invalid integer width (${g}): ${A}`)}},kB=(A,g,I,B,Q)=>{g=L(g),Q===-1&&(Q=4294967295);var i=n=>n;if(B===0){var o=32-8*I;i=n=>n<<o>>>o}var E=g.includes("unsigned"),t=(n,D)=>{if(typeof n!="number"&&typeof n!="boolean")throw new TypeError(`Cannot convert "${tA(n)}" to ${D}`);if(n<B||n>Q)throw new TypeError(`Passing a number "${tA(n)}" from JS side to C/C++ side to an argument of type "${g}", which is outside the valid range [${B}, ${Q}]!`)},r;E?r=function(n,D){return t(D,this.name),D>>>0}:r=function(n,D){return t(D,this.name),D},Z(A,{name:g,fromWireType:i,toWireType:r,argPackAdvance:j,readValueFromPointer:NB(g,I,B!==0),destructorFunction:null})},UB=(A,g,I)=>{var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],Q=B[g];function i(o){var E=c[o>>2],t=c[o+4>>2];return new Q(P.buffer,t,E)}I=L(I),Z(A,{name:I,fromWireType:i,argPackAdvance:j,readValueFromPointer:i},{ignoreDuplicateRegistrations:!0})},SB=(A,g)=>{Tg(A)},JB=(A,g,I,B)=>{if(s(typeof A=="string",`stringToUTF8Array expects a string (got ${typeof A})`),!(B>0))return 0;for(var Q=I,i=I+B-1,o=0;o<A.length;++o){var E=A.charCodeAt(o);if(E>=55296&&E<=57343){var t=A.charCodeAt(++o);E=65536+((E&1023)<<10)|t&1023}if(E<=127){if(I>=i)break;g[I++]=E}else if(E<=2047){if(I+1>=i)break;g[I++]=192|E>>6,g[I++]=128|E&63}else if(E<=65535){if(I+2>=i)break;g[I++]=224|E>>12,g[I++]=128|E>>6&63,g[I++]=128|E&63}else{if(I+3>=i)break;E>1114111&&z("Invalid Unicode code point "+QA(E)+" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF)."),g[I++]=240|E>>18,g[I++]=128|E>>12&63,g[I++]=128|E>>6&63,g[I++]=128|E&63}}return g[I]=0,I-Q},dB=(A,g,I)=>(s(typeof I=="number","stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),JB(A,J,g,I)),YB=A=>{for(var g=0,I=0;I<A.length;++I){var B=A.charCodeAt(I);B<=127?g++:B<=2047?g+=2:B>=55296&&B<=57343?(g+=4,++I):g+=3}return g},fB=(A,g)=>{g=L(g);var I=g==="std::string";Z(A,{name:g,fromWireType(B){var Q=c[B>>2],i=B+4,o;if(I)for(var E=i,t=0;t<=Q;++t){var r=i+t;if(t==Q||J[r]==0){var n=r-E,D=CA(E,n);o===void 0?o=D:(o+="\0",o+=D),E=r+1}}else{for(var h=new Array(Q),t=0;t<Q;++t)h[t]=String.fromCharCode(J[i+t]);o=h.join("")}return v(B),o},toWireType(B,Q){Q instanceof ArrayBuffer&&(Q=new Uint8Array(Q));var i,o=typeof Q=="string";o||Q instanceof Uint8Array||Q instanceof Uint8ClampedArray||Q instanceof Int8Array||w("Cannot pass non-string to std::string"),I&&o?i=YB(Q):i=Q.length;var E=xg(4+i+1),t=E+4;if(c[E>>2]=i,I&&o)dB(Q,t,i+1);else if(o)for(var r=0;r<i;++r){var n=Q.charCodeAt(r);n>255&&(v(t),w("String has UTF-16 code units that do not fit in 8 bits")),J[t+r]=n}else for(var r=0;r<i;++r)J[t+r]=Q[r];return B!==null&&B.push(v,E),E},argPackAdvance:j,readValueFromPointer:uA,destructorFunction(B){v(B)}})},vg=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,pB=(A,g)=>{s(A%2==0,"Pointer passed to UTF16ToString must be aligned to two bytes!");for(var I=A,B=I>>1,Q=B+g/2;!(B>=Q)&&UA[B];)++B;if(I=B<<1,I-A>32&&vg)return vg.decode(J.subarray(A,I));for(var i="",o=0;!(o>=g/2);++o){var E=sA[A+o*2>>1];if(E==0)break;i+=String.fromCharCode(E)}return i},uB=(A,g,I)=>{if(s(g%2==0,"Pointer passed to stringToUTF16 must be aligned to two bytes!"),s(typeof I=="number","stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),I??=2147483647,I<2)return 0;I-=2;for(var B=g,Q=I<A.length*2?I/2:A.length,i=0;i<Q;++i){var o=A.charCodeAt(i);sA[g>>1]=o,g+=2}return sA[g>>1]=0,g-B},KB=A=>A.length*2,mB=(A,g)=>{s(A%4==0,"Pointer passed to UTF32ToString must be aligned to four bytes!");for(var I=0,B="";!(I>=g/4);){var Q=DA[A+I*4>>2];if(Q==0)break;if(++I,Q>=65536){var i=Q-65536;B+=String.fromCharCode(55296|i>>10,56320|i&1023)}else B+=String.fromCharCode(Q)}return B},LB=(A,g,I)=>{if(s(g%4==0,"Pointer passed to stringToUTF32 must be aligned to four bytes!"),s(typeof I=="number","stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),I??=2147483647,I<4)return 0;for(var B=g,Q=B+I-4,i=0;i<A.length;++i){var o=A.charCodeAt(i);if(o>=55296&&o<=57343){var E=A.charCodeAt(++i);o=65536+((o&1023)<<10)|E&1023}if(DA[g>>2]=o,g+=4,g+4>Q)break}return DA[g>>2]=0,g-B},HB=A=>{for(var g=0,I=0;I<A.length;++I){var B=A.charCodeAt(I);B>=55296&&B<=57343&&++I,g+=4}return g},bB=(A,g,I)=>{I=L(I);var B,Q,i,o;g===2?(B=pB,Q=uB,o=KB,i=E=>UA[E>>1]):g===4&&(B=mB,Q=LB,o=HB,i=E=>c[E>>2]),Z(A,{name:I,fromWireType:E=>{for(var t=c[E>>2],r,n=E+4,D=0;D<=t;++D){var h=E+4+D*g;if(D==t||i(h)==0){var f=h-n,u=B(n,f);r===void 0?r=u:(r+="\0",r+=u),n=h+g}}return v(E),r},toWireType:(E,t)=>{typeof t!="string"&&w(`Cannot pass non-string to C++ string type ${I}`);var r=o(t),n=xg(4+r+g);return c[n>>2]=r/g,Q(t,n+4,r+g),E!==null&&E.push(v,n),n},argPackAdvance:j,readValueFromPointer:uA,destructorFunction(E){v(E)}})},TB=(A,g)=>{g=L(g),Z(A,{isVoid:!0,name:g,argPackAdvance:0,fromWireType:()=>{},toWireType:(I,B)=>{}})},vB=(A,g,I)=>J.copyWithin(A,g,g+I),XB=(A,g)=>{var I=$[A];return I===void 0&&w(`${g} has unknown type ${mg(A)}`),I},WB=(A,g)=>{A=XB(A,"_emval_take_value");var I=A.readValueFromPointer(g);return HA.toHandle(I)},ZB=()=>2147483648,xB=A=>{var g=nA.buffer,I=(A-g.byteLength+65535)/65536;try{return nA.grow(I),ng(),1}catch(B){p(`growMemory: Attempted to grow heap from ${g.byteLength} bytes to ${A} bytes, but got error: ${B}`)}},qB=A=>{var g=J.length;A>>>=0,s(A>g);var I=ZB();if(A>I)return p(`Cannot enlarge memory, requested ${A} bytes, but the limit is ${I} bytes!`),!1;for(var B=(t,r)=>t+(r-t%r)%r,Q=1;Q<=4;Q*=2){var i=g*(1+.2/Q);i=Math.min(i,A+100663296);var o=Math.min(I,B(Math.max(A,i),65536)),E=xB(o);if(E)return!0}return p(`Failed to grow the heap from ${g} bytes to ${o} bytes, not enough memory!`),!1},VB=A=>{Y("fd_close called without SYSCALLS_REQUIRE_FILESYSTEM")},jB=(A,g)=>(s(A==A>>>0||A==(A|0)),s(g===(g|0)),g+2097152>>>0<4194305-!!A?(A>>>0)+g*4294967296:NaN);function PB(A,g,I,B,Q){return jB(g,I),70}var OB=[null,[],[]],_B=(A,g)=>{var I=OB[A];s(I),g===0||g===10?((A===1?tI:p)(Ng(I,0)),I.length=0):I.push(g)},zB=(A,g,I,B)=>{for(var Q=0,i=0;i<I;i++){var o=c[g>>2],E=c[g+4>>2];g+=8;for(var t=0;t<E;t++)_B(A,J[o+t]);Q+=E}return c[B>>2]=Q,0},$B=A=>Og(A);C.incrementExceptionRefcount=$B;var AQ=A=>CQ(A);C.decrementExceptionRefcount=AQ;var Xg=A=>jg(A),gQ=A=>{var g=V(),I=Xg(4),B=Xg(4);EQ(A,I,B);var Q=c[I>>2],i=c[B>>2],o=CA(Q);v(Q);var E;return i&&(E=CA(i),v(i)),q(g),[o,E]},Wg=A=>gQ(A);C.getExceptionMessage=Wg,TI(),eA=C.BindingError=class extends Error{constructor(g){super(g),this.name="BindingError"}},Sg=C.InternalError=class extends Error{constructor(g){super(g),this.name="InternalError"}},_I(),jI(),EB(),Kg=C.UnboundTypeError=rB(Error,"UnboundTypeError"),hB();function IQ(){dI("fetchSettings")}var Zg={__assert_fail:fI,__cxa_begin_catch:pI,__cxa_find_matching_catch_2:KI,__cxa_find_matching_catch_3:mI,__cxa_throw:LI,__resumeException:uI,_abort_js:HI,_embind_register_bigint:bI,_embind_register_bool:XI,_embind_register_class:aB,_embind_register_class_constructor:wB,_embind_register_class_function:FB,_embind_register_emval:Tg,_embind_register_float:MB,_embind_register_integer:kB,_embind_register_memory_view:UB,_embind_register_optional:SB,_embind_register_std_string:fB,_embind_register_std_wstring:bB,_embind_register_void:TB,_emscripten_memcpy_js:vB,_emval_take_value:WB,emscripten_resize_heap:qB,fd_close:VB,fd_seek:PB,fd_write:zB,invoke_ii:oQ,invoke_iii:rQ,invoke_v:tQ,invoke_vi:aQ,invoke_vii:sQ,invoke_viii:DQ,invoke_viiii:nQ},b=JI(),BQ=m("__getTypeName",1),xg=m("malloc",1),v=m("free",1),AA=m("setThrew",2),QQ=m("_emscripten_tempret_set",1),qg=()=>(qg=b.emscripten_stack_init)(),Qg=()=>(Qg=b.emscripten_stack_get_end)(),Vg=A=>(Vg=b._emscripten_stack_restore)(A),jg=A=>(jg=b._emscripten_stack_alloc)(A),Pg=()=>(Pg=b.emscripten_stack_get_current)(),Og=m("__cxa_increment_exception_refcount",1),CQ=m("__cxa_decrement_exception_refcount",1),EQ=m("__get_exception_message",3),iQ=m("__cxa_can_catch",3),eQ=m("__cxa_is_pointer_type",1);C.dynCall_jiji=m("dynCall_jiji",5);function oQ(A,g){var I=V();try{return T(A)(g)}catch(B){if(q(I),!(B instanceof x))throw B;AA(1,0)}}function tQ(A){var g=V();try{T(A)()}catch(I){if(q(g),!(I instanceof x))throw I;AA(1,0)}}function rQ(A,g,I){var B=V();try{return T(A)(g,I)}catch(Q){if(q(B),!(Q instanceof x))throw Q;AA(1,0)}}function aQ(A,g){var I=V();try{T(A)(g)}catch(B){if(q(I),!(B instanceof x))throw B;AA(1,0)}}function nQ(A,g,I,B,Q){var i=V();try{T(A)(g,I,B,Q)}catch(o){if(q(i),!(o instanceof x))throw o;AA(1,0)}}function sQ(A,g,I){var B=V();try{T(A)(g,I)}catch(Q){if(q(B),!(Q instanceof x))throw Q;AA(1,0)}}function DQ(A,g,I,B){var Q=V();try{T(A)(g,I,B)}catch(i){if(q(Q),!(i instanceof x))throw i;AA(1,0)}}var wQ=["writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertU32PairToI53","getTempRet0","zeroMemory","exitJS","isLeapYear","ydayFromDate","arraySum","addDays","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","initRandomFill","randomFill","emscriptenLog","readEmAsmArgs","jstoi_q","getExecutableName","listenOnce","autoResumeAudioContext","handleException","keepRuntimeAlive","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","asmjsMangle","asyncLoad","alignMemory","mmapAlloc","HandleAllocator","getNativeTypeSize","STACK_SIZE","STACK_ALIGN","POINTER_SIZE","ASSERTIONS","getCFunc","ccall","cwrap","uleb128Encode","sigToWasmTypes","generateFuncType","convertJsFunctionToWasm","getEmptyTableSlot","updateTableMap","getFunctionAddress","addFunction","removeFunction","reallyNegative","unSign","strLen","reSign","formatString","intArrayFromString","intArrayToString","AsciiToString","stringToAscii","stringToNewUTF8","stringToUTF8OnStack","writeArrayToMemory","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","jsStackTrace","getCallstack","convertPCtoSourceLocation","getEnvStrings","checkWasiClock","wasiRightsToMuslOFlags","wasiOFlagsToMuslOFlags","createDyncallWrapper","safeSetTimeout","setImmediateWrapped","clearImmediateWrapped","polyfillSetImmediate","getPromise","makePromise","idsToPromises","makePromiseCallback","Browser_asyncPrepareDataCounter","setMainLoop","getSocketFromFD","getSocketAddress","FS_createPreloadedFile","FS_modeStringToFlags","FS_getMode","FS_stdin_getChar","FS_unlink","FS_createDataFile","FS_mkdirTree","_setNetworkCallback","heapObjectForWebGLType","toTypedArrayIndex","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","webgl_enable_WEBGL_multi_draw","emscriptenWebGLGet","computeUnpackAlignedImageSize","colorChannelsInGlTextureFormat","emscriptenWebGLGetTexPixelData","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","__glGetActiveAttribOrUniform","writeGLArray","registerWebGlEventCallback","runAndAbortIfError","ALLOC_NORMAL","ALLOC_STACK","allocate","writeStringToMemory","writeAsciiToMemory","setErrNo","demangle","stackTrace","getFunctionArgsName","createJsInvokerSignature","registerInheritedInstance","unregisterInheritedInstance","enumReadValueFromPointer","validateThis","getStringOrSymbol","emval_get_global","emval_returnValue","emval_lookupTypes","emval_addMethodCaller"];wQ.forEach(YI);var cQ=["run","addOnPreRun","addOnInit","addOnPreMain","addOnExit","addOnPostRun","addRunDependency","removeRunDependency","out","err","callMain","abort","wasmMemory","wasmExports","writeStackCookie","checkStackCookie","intArrayFromBase64","tryParseAsDataURI","convertI32PairToI53Checked","stackSave","stackRestore","stackAlloc","setTempRet0","ptrToString","getHeapMax","growMemory","ENV","MONTH_DAYS_REGULAR","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR_CUMULATIVE","MONTH_DAYS_LEAP_CUMULATIVE","ERRNO_CODES","ERRNO_MESSAGES","DNS","Protocols","Sockets","timers","warnOnce","readEmAsmArgsArray","jstoi_s","dynCallLegacy","getDynCaller","dynCall","wasmTable","noExitRuntime","freeTableIndexes","functionsInTableMap","setValue","getValue","PATH","PATH_FS","UTF8Decoder","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","UTF16Decoder","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","JSEvents","specialHTMLTargets","findCanvasEventTarget","currentFullscreenStrategy","restoreOldWindowedStyle","UNWIND_CACHE","ExitStatus","flush_NO_FILESYSTEM","promiseMap","uncaughtExceptionCount","exceptionLast","exceptionCaught","ExceptionInfo","findMatchingCatch","getExceptionMessageCommon","incrementExceptionRefcount","decrementExceptionRefcount","getExceptionMessage","Browser","getPreloadedImageData__data","wget","SYSCALLS","preloadPlugins","FS_stdin_getChar_buffer","FS_createPath","FS_createDevice","FS_readFile","FS","FS_createLazyFile","MEMFS","TTY","PIPEFS","SOCKFS","tempFixedLengthArray","miniTempWebGLFloatBuffers","miniTempWebGLIntBuffers","GL","AL","GLUT","EGL","GLEW","IDBStore","SDL","SDL_gfx","allocateUTF8","allocateUTF8OnStack","print","printErr","InternalError","BindingError","throwInternalError","throwBindingError","registeredTypes","awaitingDependencies","typeDependencies","tupleRegistrations","structRegistrations","sharedRegisterType","whenDependentTypesAreResolved","embind_charCodes","embind_init_charCodes","readLatin1String","getTypeName","getFunctionName","heap32VectorToArray","requireRegisteredType","usesDestructorStack","createJsInvoker","UnboundTypeError","PureVirtualError","GenericWireTypeSize","EmValType","init_embind","throwUnboundTypeError","ensureOverloadTable","exposePublicSymbol","replacePublicSymbol","extendError","createNamedFunction","embindRepr","registeredInstances","getBasestPointer","getInheritedInstance","getInheritedInstanceCount","getLiveInheritedInstances","registeredPointers","registerType","integerReadValueFromPointer","floatReadValueFromPointer","readPointer","runDestructors","newFunc","craftInvokerFunction","embind__requireFunction","genericPointerToWireType","constNoSmartPtrRawPointerToWireType","nonConstNoSmartPtrRawPointerToWireType","init_RegisteredPointer","RegisteredPointer","RegisteredPointer_fromWireType","runDestructor","releaseClassHandle","finalizationRegistry","detachFinalizer_deps","detachFinalizer","attachFinalizer","makeClassHandle","init_ClassHandle","ClassHandle","throwInstanceAlreadyDeleted","deletionQueue","flushPendingDeletes","delayFunction","setDelayFunction","RegisteredClass","shallowCopyInternalPointer","downcastPointer","upcastPointer","char_0","char_9","makeLegalFunctionName","emval_freelist","emval_handles","emval_symbols","init_emval","count_emval_handles","Emval","emval_methodCallers","reflectConstruct"];cQ.forEach(Gg);var bA;wA=function A(){bA||_g(),bA||(wA=A)};function FQ(){qg(),nI()}function _g(){if(O>0||(FQ(),sI(),O>0))return;function A(){bA||(bA=!0,C.calledRun=!0,!kA&&(DI(),R(C),C.onRuntimeInitialized&&C.onRuntimeInitialized(),s(!C._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'),wI()))}C.setStatus?(C.setStatus("Running..."),setTimeout(function(){setTimeout(function(){C.setStatus("")},1),A()},1)):A(),jA()}if(C.preInit)for(typeof C.preInit=="function"&&(C.preInit=[C.preInit]);C.preInit.length>0;)C.preInit.pop()();_g(),F=y;for(const A of Object.keys(C))A in a||Object.defineProperty(a,A,{configurable:!0,get(){Y(`Access to module property ('${A}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`)}});return F}})();const uQ=new FinalizationRegistry(e=>{console.log("GC called"),e.delete()}),KQ=42,{IsingJS:mQ}=await pQ();class LQ{#A;constructor(a){if(!Number.isInteger(a)||a<=0)throw new Error;this.#A=new mQ(a,KQ),uQ.register(this,this.#A)}get size(){return this.#A.size()}set size(a){if(!Number.isInteger(a)||a<=0)throw new Error;this.#A.resize(a)}update(a){this.#A.update(a)}spin(){const a=this.#A.size(),F=Array.from({length:a},()=>Array.from({length:a},()=>1)),C=this.#A.spin();try{for(let R=0;R<a;++R)for(let l=0;l<a;++l){const y=C.get(R*a+l);if(y!==1&&y!==-1)throw new Error;F[R][l]=y}return F}finally{C.delete()}}}const HQ=Number.parseInt(self.name),XA=new LQ(HQ),bQ={size(){return XA.size},resize(e){XA.size=e},update(e){XA.update(e)},spin(){return XA.spin()}};og(bQ);var TQ=Object.freeze({__proto__:null});
